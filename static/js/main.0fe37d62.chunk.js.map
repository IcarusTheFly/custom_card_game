{"version":3,"sources":["components/Header.js","components/Footer.js","components/Rules.js","components/About.js","components/CardModal.js","components/CardCreateForm.js","components/Cards.js","shared/cards.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","state","showNavbar","navbarToggle","bind","this","setState","Navbar","dark","expand","className","NavbarBrand","href","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","NavLink","Jumbotron","fluid","Component","Footer","Rules","About","Breadcrumb","BreadcrumbItem","to","active","CardModal","card","Modal","toggle","ModalHeader","title","ModalBody","Media","object","width","src","img","alt","name","body","heading","description","ModalFooter","Button","color","close","CardCreateForm","handleBlur","field","e","touched","isModalOpen","toggleCreatedCardModal","handleChange","handleSubmit","target","value","preventDefault","errors","length","validate","Form","onSubmit","FormGroup","row","Label","htmlFor","md","Col","Input","type","id","placeholder","valid","invalid","onBlur","onChange","FormFeedback","rows","size","offset","disabled","disableSubmit","Cards","toggleModal","closeModal","showCardBodyID","modalCardID","undefined","cardList","cards","map","key","Card","CardImg","CardBody","CardTitle","CardText","CARDS","showDetails","App","basename","process","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0fe37d62.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    Navbar,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    NavbarToggler,\r\n    Collapse,\r\n    Jumbotron } from 'reactstrap';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showNavbar: false\r\n        }\r\n        this.navbarToggle = this.navbarToggle.bind(this);\r\n    }\r\n\r\n    navbarToggle() {\r\n        this.setState({\r\n            showNavbar: !this.state.showNavbar\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarBrand href=\"#/custom_card_game/home\">Custom card game</NavbarBrand>\r\n                        <NavbarToggler onClick={this.navbarToggle}/>\r\n                        <Collapse isOpen={this.state.showNavbar} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink href=\"#/custom_card_game/home\">\r\n                                        <i className=\"fa fa-list\"></i> Game Rules\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink href=\"#/custom_card_game/cards\">\r\n                                        <i className=\"fa fa-image\"></i> Cards\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink href=\"#/custom_card_game/about\">\r\n                                        <i className=\"fa fa-info\"></i> About us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron fluid>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Custom card game</h1>\r\n                                <p>This is the website for your custom card game!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2019 - Custom Card Game</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction Rules() {\r\n    return (\r\n        <div className=\"container\">\r\n            <h3 className=\"mt-3 border-info border-bottom\">Game Rules</h3>\r\n            <div className=\"row mt-3\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h4>Main rules</h4>\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada dolor risus, at dictum purus eleifend eget. Fusce eleifend at nunc et elementum. Vestibulum non enim arcu. Pellentesque sit amet iaculis augue, ac consectetur sem. Fusce pretium lacinia metus, nec faucibus lectus consectetur vitae. Ut rhoncus fermentum nisi sit amet mollis. Sed lorem justo, imperdiet vitae feugiat a, volutpat quis ipsum. Nam a lobortis sem. Sed eu diam porttitor, rhoncus lectus ut, venenatis velit. Maecenas porttitor vehicula tincidunt. In accumsan ultrices diam, a sodales velit ornare nec. Morbi eu odio finibus, malesuada ipsum nec, tincidunt mi. Proin tincidunt rhoncus libero et fermentum. Nulla sagittis urna eros, id malesuada risus euismod at.</p>\r\n                    <p>Nam viverra neque nec nulla egestas, sed fringilla nibh ornare. Proin eu mauris luctus, condimentum urna vitae, scelerisque arcu. Quisque pellentesque magna diam, quis malesuada urna mollis in. Nulla facilisi. Vivamus mi diam, tempus nec viverra non, rhoncus vitae ante. Integer in pretium odio. Vestibulum quis dolor at ante placerat ornare nec eu mi. Curabitur posuere turpis nulla, eleifend fringilla enim mollis sit amet. Pellentesque pellentesque orci ac nibh vehicula mattis. Nunc arcu dui, feugiat non justo ac, pulvinar pretium erat.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h4>Victory conditions</h4>\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nec augue quis tortor pretium volutpat. Fusce dictum facilisis massa, in cursus ex gravida a. In hac habitasse platea dictumst. In sed ultrices ex, venenatis semper mauris. Sed eget malesuada ligula, eu laoreet lacus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.</p>\r\n                    <h4>Exceptions</h4>\r\n                    <p>Proin nec malesuada quam, sit amet posuere sapien. Curabitur euismod convallis tempus. Praesent at sem vel lorem porta mattis in et sapien. Donec varius dictum felis non rhoncus. Suspendisse iaculis odio.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rules;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction About() {\r\n    return (\r\n        <div className=\"container\">\r\n            <Breadcrumb>\r\n                <BreadcrumbItem><Link to=\"/custom_card_game/home\">Home</Link></BreadcrumbItem>\r\n                <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n            </Breadcrumb>\r\n            <h3 className=\"mt-3 border-info border-bottom\">About us</h3>\r\n            <div className=\"row mt-3\">\r\n                <div className=\"col-12\">\r\n                    <h4>Who we are</h4>\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada dolor risus, at dictum purus eleifend eget. Fusce eleifend at nunc et elementum. Vestibulum non enim arcu. Pellentesque sit amet iaculis augue, ac consectetur sem. Fusce pretium lacinia metus, nec faucibus lectus consectetur vitae. Ut rhoncus fermentum nisi sit amet mollis. Sed lorem justo, imperdiet vitae feugiat a, volutpat quis ipsum. Nam a lobortis sem. Sed eu diam porttitor, rhoncus lectus ut, venenatis velit. Maecenas porttitor vehicula tincidunt. In accumsan ultrices diam, a sodales velit ornare nec. Morbi eu odio finibus, malesuada ipsum nec, tincidunt mi. Proin tincidunt rhoncus libero et fermentum. Nulla sagittis urna eros, id malesuada risus euismod at.</p>\r\n                    <p>Nam viverra neque nec nulla egestas, sed fringilla nibh ornare. Proin eu mauris luctus, condimentum urna vitae, scelerisque arcu. Quisque pellentesque magna diam, quis malesuada urna mollis in. Nulla facilisi. Vivamus mi diam, tempus nec viverra non, rhoncus vitae ante. Integer in pretium odio. Vestibulum quis dolor at ante placerat ornare nec eu mi. Curabitur posuere turpis nulla, eleifend fringilla enim mollis sit amet. Pellentesque pellentesque orci ac nibh vehicula mattis. Nunc arcu dui, feugiat non justo ac, pulvinar pretium erat.</p>\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nec augue quis tortor pretium volutpat. Fusce dictum facilisis massa, in cursus ex gravida a. In hac habitasse platea dictumst. In sed ultrices ex, venenatis semper mauris. Sed eget malesuada ligula, eu laoreet lacus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.</p>\r\n\r\n                    <h4>What we do here</h4>\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada dolor risus, at dictum purus eleifend eget. Fusce eleifend at nunc et elementum. Vestibulum non enim arcu. Pellentesque sit amet iaculis augue, ac consectetur sem. Fusce pretium lacinia metus, nec faucibus lectus consectetur vitae. Ut rhoncus fermentum nisi sit amet mollis. Sed lorem justo, imperdiet vitae feugiat a, volutpat quis ipsum. Nam a lobortis sem. Sed eu diam porttitor, rhoncus lectus ut, venenatis velit. Maecenas porttitor vehicula tincidunt. In accumsan ultrices diam, a sodales velit ornare nec. Morbi eu odio finibus, malesuada ipsum nec, tincidunt mi. Proin tincidunt rhoncus libero et fermentum. Nulla sagittis urna eros, id malesuada risus euismod at.</p>\r\n                    <p>Proin nec malesuada quam, sit amet posuere sapien. Curabitur euismod convallis tempus. Praesent at sem vel lorem porta mattis in et sapien. Donec varius dictum felis non rhoncus. Suspendisse iaculis odio.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button, Media } from 'reactstrap';\r\n\r\nconst CardModal = (props) => {\r\n    const card = props.card;\r\n\r\n    return (\r\n        <Modal isOpen={props.isOpen} toggle={props.toggle}>\r\n            <ModalHeader className=\"bg-warning\">{card.title}</ModalHeader>\r\n            <ModalBody>\r\n            <Media>\r\n                <Media object width=\"100%\" src={\"../assets/images/\" + card.img} alt={card.name} />\r\n            </Media>\r\n            <Media body className=\"ml-4 mr-2 mt-2\">\r\n                <Media heading>{card.name}</Media>\r\n                <p>{card.description}</p>\r\n            </Media>\r\n            {/* <Card>\r\n                <CardImg width=\"100%\" src={\"assets/images/\" + card.img} alt={card.name} />\r\n                <CardBody>\r\n                    <CardTitle>{card.name}</CardTitle>\r\n                    <CardText>{card.description}</CardText>\r\n                </CardBody>\r\n            </Card> */}\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"secondary\" onClick={props.close}>Close</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default CardModal;","import React, { Component } from 'react';\r\nimport CardModal from './CardModal';\r\nimport { Form, FormGroup, Label, Input, Button, Col, FormFeedback } from 'reactstrap';\r\n\r\nclass CardCreateForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            img: 'image1.png', // The picture should be hardcoded for now\r\n            title: '',\r\n            name: '',\r\n            description: '',\r\n            isModalOpen: false,\r\n            touched: {\r\n                title: false,\r\n                name: false,\r\n                description: false\r\n            }\r\n        }\r\n\r\n        this.toggleCreatedCardModal = this.toggleCreatedCardModal.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleBlur = this.handleBlur.bind(this);\r\n    }\r\n\r\n    toggleCreatedCardModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleChange(e) {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        this.setState({\r\n            isModalOpen: true\r\n        });\r\n        e.preventDefault();\r\n    }\r\n\r\n    handleBlur = (field) => {\r\n        return (e) => {\r\n            this.setState({\r\n                touched: { ...this.state.touched, [field]: true }\r\n            })\r\n        }\r\n    }\r\n\r\n    validate(title, name, description) {\r\n        const errors = {\r\n            title: '',\r\n            name: '',\r\n            description: ''\r\n        }\r\n\r\n        if (this.state.touched.title && title.length < 2) {\r\n            errors.title = 'Card title should have at least 2 characters';\r\n        } else if (this.state.touched.title && title.length > 8) {\r\n            errors.title = 'Card title should not have more than 8 characters';\r\n        }\r\n\r\n        if (this.state.touched.name && name.length < 4) {\r\n            errors.name = 'Card name should have at least 4 characters';\r\n        } else if (this.state.touched.name && name.length > 12) {\r\n            errors.name = 'Card name should not have more than 12 characters';\r\n        }\r\n\r\n        if (this.state.touched.description && description.length < 5) {\r\n            errors.description = 'Card description should have at least 5 characters';\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    disableSubmit(errors) {\r\n        return (\r\n            this.state.title === '' ||\r\n            this.state.name === '' ||\r\n            this.state.description === '' ||\r\n            errors.title !== ''||\r\n            errors.name !== '' ||\r\n            errors.description !== ''\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const errors = this.validate(this.state.title, this.state.name, this.state.description);\r\n\r\n        return (\r\n            <Form onSubmit={this.handleSubmit}>\r\n                <FormGroup row>\r\n                    <Label htmlFor=\"title\" md={2}>Title</Label>\r\n                    <Col md={10}>\r\n                        <Input type=\"text\" id=\"title\" name=\"title\"\r\n                            placeholder=\"Card Title\"\r\n                            value={this.state.title}\r\n                            valid={this.state.touched.title && errors.title === ''}\r\n                            invalid={errors.title !== ''}\r\n                            onBlur={this.handleBlur('title')}\r\n                            onChange={this.handleChange}\r\n                            />\r\n                        <FormFeedback>{errors.title}</FormFeedback>\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label htmlFor=\"name\" md={2}>Name</Label>\r\n                    <Col md={10}>\r\n                        <Input type=\"text\" id=\"name\" name=\"name\"\r\n                            placeholder=\"Card Name\"\r\n                            value={this.state.name}\r\n                            valid={this.state.touched.name && errors.name === ''}\r\n                            invalid={errors.name !== ''}\r\n                            onBlur={this.handleBlur('name')}\r\n                            onChange={this.handleChange} \r\n                            />\r\n                        <FormFeedback>{errors.name}</FormFeedback>\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label htmlFor=\"description\" md={2}>Description</Label>\r\n                    <Col md={10}>\r\n                        <Input type=\"textarea\" id=\"description\" name=\"description\"\r\n                            rows=\"6\"\r\n                            valid={this.state.touched.description && errors.description === ''}\r\n                            invalid={errors.description !== ''}\r\n                            onBlur={this.handleBlur('description')}\r\n                            onChange={this.handleChange}\r\n                            />\r\n                        <FormFeedback>{errors.description}</FormFeedback>\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Col md={{size: 3, offset: 9}} className=\"text-right\">\r\n                        <Button type=\"submit\" color=\"primary\" className=\"customSubmit\" disabled={this.disableSubmit(errors)}>\r\n                            Open card view\r\n                        </Button>\r\n                    </Col>\r\n                </FormGroup>\r\n                <CardModal isOpen={this.state.isModalOpen} toggle={() => this.toggleCreatedCardModal()} card={this.state} close={this.toggleCreatedCardModal} />\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CardCreateForm;","import React, { Component } from 'react';\r\nimport CardModal from './CardModal';\r\nimport CardCreateForm from './CardCreateForm';\r\nimport { Card, CardImg, Collapse, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Cards extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // this.toggleBody = this.toggleBody.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.closeModal = this.toggleModal.bind(this);\r\n        this.state = {\r\n            showCardBodyID: null,\r\n            modalCardID: null\r\n        };\r\n    }\r\n\r\n    // toggleBody(card) {\r\n    //     this.setState({\r\n    //         showCardBodyID: card.id\r\n    //     });\r\n    //     console.log(this.state);\r\n    // }\r\n\r\n    toggleModal(card) {\r\n        this.setState({\r\n            modalCardID: (card !== undefined)? card.id : null\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            modalCardID: null\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const cardList = this.props.cards.map((card) => {\r\n            return (\r\n                <div key={card.id} className=\"col-6 col-md-3 mt-2\">\r\n                    <Card>\r\n                        {/* <CardImg onClick={() => this.toggleBody(card)} width=\"100%\" src={\"assets/images/\" + card.img} alt={card.name} /> */}\r\n                        <CardImg onClick={() => this.toggleModal(card)} width=\"100%\" src={\"assets/images/\" + card.img} alt={card.name} />\r\n                        <Collapse isOpen={this.state.showCardBodyID === card.id}>\r\n                            <CardBody>\r\n                                <CardTitle>{card.name}</CardTitle>\r\n                                <CardText>{card.description}</CardText>\r\n                            </CardBody>\r\n                        </Collapse>\r\n                    </Card>\r\n                    <CardModal isOpen={this.state.modalCardID === card.id} toggle={() => this.toggleModal()} card={card} close={this.closeModal} />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/custom_card_game/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Cards</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3 className=\"mt-3 border-info border-bottom\">Cards List</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {cardList}\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3 className=\"mt-3 border-info border-bottom\">Create your own card (without image)</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <CardCreateForm />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","export const CARDS = [\r\n    {\r\n        id: 1,\r\n        name: 'Card One',\r\n        title: 'Number #1',\r\n        description: 'Just the first card',\r\n        img: 'image1.png',\r\n        showDetails: false\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Card Two',\r\n        title: 'Number #2',\r\n        description: 'Just the second card',\r\n        img: 'image2.png',\r\n        showDetails: false\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Card Three',\r\n        title: 'Number #3',\r\n        description: 'Just the third card',\r\n        img: 'image3.png',\r\n        showDetails: false\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Card Four',\r\n        title: 'Number #4',\r\n        description: 'Just the fourth card',\r\n        img: 'image4.png',\r\n        showDetails: false\r\n    },\r\n    {\r\n        id: 5,\r\n        name: 'Card Five',\r\n        title: 'Number #5',\r\n        description: 'Just the fifth card',\r\n        img: 'image5.png',\r\n        showDetails: false\r\n    }\r\n];","import React, { Component } from 'react';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport Rules from './components/Rules';\r\nimport About from './components/About';\r\nimport Cards from './components/Cards';\r\nimport './App.css';\r\nimport { CARDS } from './shared/cards';\r\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nexport default class App extends Component {\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    // this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      cards: CARDS\r\n      // isOpen: false\r\n    }\r\n  }\r\n\r\n  // toggle() {\r\n  //   this.setState({\r\n  //     isOpen: !this.state.isOpen\r\n  //   });\r\n  // }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n          <Header />\r\n          <Switch>\r\n            <Route exact path=\"/home\" component={Rules} />\r\n            <Route exact path=\"/cards\" component={() => <Cards cards={this.state.cards}/>} />\r\n            <Route path=\"/about\" component={About} />\r\n            <Redirect to=\"/home\" />\r\n          </Switch>\r\n          <Footer />\r\n        </HashRouter>\r\n      </div>\r\n    );\r\n  }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}